bash grademe.sh

--------------------------------------------------------------------------------------------
|                                     CHECKING FILES                                       |
--------------------------------------------------------------------------------------------

Makefile      -Wall     -Wextra   -Werror
found         ok        ok        ok

Author file
not found

Header file   Norme
found         ok

--------------------------------------------------------------------------------------------
|                                    COMPILING LIBFT                                       |
--------------------------------------------------------------------------------------------

rule all        rule $(NAME)     rule bonus       rule fclean     make re         libft.a
found           found            found            found           ok              found


Part1 functions

FUNCTION              NORME          COMPIL.     FORBIDDEN FUNC.  TESTS               RESULT
ft_memset             ok             success     clean            âœ“âœ“âœ“âœ“                OK
ft_bzero              ok             success     clean            âœ“âœ“                  OK
ft_calloc             ok             success     clean            âœ“                   OK
ft_memcpy             ok             success     clean            âœ“âœ“âœ“                 OK
ft_memccpy            ok             failure     compil. failed   compil. failed      KO
ft_memmove            ok             success     clean            âœ“âœ“âœ“âœ“âœ“               OK
ft_memchr             ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“              OK
ft_memcmp             ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“           OK
ft_strlen             ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“              OK
ft_strdup             ok             success     clean            âœ“                   OK
ft_strlcat            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“           OK
ft_strlcpy            ok             success     clean            âœ“âœ“âœ“âœ“âœ“               OK
ft_strchr             ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“              OK
ft_strrchr            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“            OK
ft_strnstr            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“          OK
ft_strncmp            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“         OK
ft_atoi               ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“ OK
ft_isalpha            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK
ft_isdigit            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK
ft_isalnum            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK
ft_isascii            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“            OK
ft_isprint            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK
ft_toupper            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK
ft_tolower            ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK

Total : 23/24

Part2 functions

FUNCTION              NORME          COMPIL.     FORBIDDEN FUNC.  TESTS               RESULT
ft_strmapi            ok             success     clean            âœ“                   OK
ft_substr             ok             success     clean            âœ“âœ“âœ“âœ“âœ“               OK
ft_strjoin            ok             success     clean            âœ“âœ“âœ“âœ“                OK
ft_strtrim            ok             success     clean            âœ“âœ“âœ“âœ“âœ“               OK
ft_split              ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“              OK
ft_itoa               ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“          OK
ft_putchar_fd         ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“             OK
ft_putstr_fd          ok             success     clean            âœ“âœ“âœ“âœ“                OK
ft_putendl_fd         ok             success     clean            âœ“âœ“âœ“âœ“                OK
ft_putnbr_fd          ok             success     clean            âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“           OK

Total : 10/10

Bonus functions

FUNCTION              NORME          COMPIL.     FORBIDDEN FUNC.  TESTS               RESULT
ft_lstnew             ok             success     clean            âœ“âœ“âœ“                 OK
ft_lstdelone          ok             success     clean            âœ“                   OK
ft_lstclear           ok             success     clean            âœ“                   OK
ft_lstadd_front       ok             success     clean            âœ“                   OK
ft_lstadd_back        ok             success     clean            âœ“                   OK
ft_lstsize            ok             success     clean            âœ“                   OK
ft_lstiter            ok             success     clean            âœ“                   OK
ft_lstmap             ok             success     clean            âœ“                   OK
ft_lstlast            ok             success     clean            âœ“                   OK

Total : 9/9
Abort : A Bus error : B Segmentation fault : S Timeout : T Nothing turned in : NTI

-----------------------------------------------------------------------------------------

make f

RUNNING TESTS:
                      First part
.-"-.     .-"-.     .-"-.     .-"-.     .-"-.     .-"-.
     "-.-"     "-.-"     "-.-"     "-.-"     "-.-"
ft_memset:     [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_bzero:      [OK] [OK] [OK] [OK]
ft_memcpy:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_memccpy:    [MISSING]
ft_memmove:    [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_memchr:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_memcmp:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strlen:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_isalpha:    [OK]
ft_isdigit:    [OK]
ft_isalnum:    [OK]
ft_isascii:    [OK]
ft_isprint:    [OK]
ft_toupper:    [OK]
ft_tolower:    [OK]
ft_strchr:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strrchr:    [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strncmp:    [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strlcpy:    [OK] [OK] [OK] [OK] [OK] [OK] [ðŸ’¥ ]
ft_strlcat:    [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strnstr:    [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_atoi:       [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [KO] [KO] [OK] [OK] [OK] [OK]
[KO]: your atoi does not work with over long max value
[KO]: your atoi does not work with over long min value // yeah, it only works with INTEGER values as it should.

ft_calloc:     [OK] [OK] [OK] [OK] [OK]
ft_strdup:     [OK] [OK] [OK] [OK] [OK] [OK] [OK]

In this part, you can choose to protect your function or not to,
a color code will tell you if your function is protected/not BUT stay coherent !
[ðŸ›¡ ] --> protected
[ðŸ’¥ ] --> not protected
                     Second part
 __)(__  __)(__  __)(__  __)(__  __)(__  __)(__  __)(__  __)
(______)(______)(______)(______)(______)(______)(______)(___

ft_substr:     [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [ðŸ’¥ ] [OK]
ft_strjoin:    [OK] [OK] [OK] [OK] [OK] [ðŸ’¥ ]
ft_strtrim:    [OK] [OK] [OK] [OK] [OK] [KO] [OK] [OK] [OK] [ðŸ’¥ ]
[KO]: your strtrim did not allocate the good size so the \0 test may be false // i allocate space for the untrimmed string. jeremy says that's okay, so i leave it like that.

ft_split:      [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [ðŸ›¡ ]
ft_itoa:       [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK] [OK]
ft_strmapi:    [OK] [OK] [OK] [OK] [OK] [ðŸ’¥ ]
ft_putchar_fd: [OK] [OK]
ft_putstr_fd:  [OK] [OK] [ðŸ’¥ ]
ft_putendl_fd: [OK] [OK] [ðŸ’¥ ]
ft_putnbr_fd:  [OK] [OK] [OK] [OK] [OK]

 /~~~\/~~\/~~~\/~~~\/~~\/~~~\                    /~~~\/~~\/~~~\/~~~\/~~\/~~~\
 | /\/ /\/ /\ || /\/ /\/ /\ |                    | /\ \/\ \/\ || /\ \/\ \/\ |
  \ \/ /\/ /\/ /\ \/ /\/ /\/ /     Bonus part     \ \/\ \/\ \/ /\ \/\ \/\ \/ /
   \ \/\ \/\ \/  \ \/\ \/\ \/                      \/ /\/ /\/ /  \/ /\/ /\/ /
,_/\ \/\ \/\ \__/\ \/\ \/\ \______________________/ /\/ /\/ /\__/ /\/ /\/ /\_,
(__/\__/\__/\____/\__/\__/\________________________/\__/\__/\____/\__/\__/\__)

ft_lstnew:     [OK] [OK] [OK] [OK]
ft_lstadd_front: [OK] [OK] [OK]
ft_lstsize:    [OK] [OK]
ft_lstlast:    [OK] [OK]
ft_lstadd_back:[OK] [OK] [OK]
ft_lstdelone:  [OK]
ft_lstclear:   [OK] [OK] [OK]
ft_lstiter:    [OK] [ðŸ›¡ ]
ft_lstmap:     [CRASH] [ðŸ›¡ ]
[crash]: your lstmap does not work with basic input // thats cause they give a null function as del, but i rotect against it. otherwise my function works.

ft_striteri:   [OK] [OK] [ðŸ’¥ ]
See result.log for more informations !
